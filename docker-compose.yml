services:
  trading_system:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: forex_trading_system
    ports:
      - "5000:5000"  # Flask server API for external trading app
    environment:
      # Flask configuration
      FLASK_ENV: production
      PYTHONUNBUFFERED: 1
      PYTHONPATH: /app

      #########################################
      # Algorithm instance ID
      # Multiple instances can run simultaneously for different strategies
      ALGO_INSTANCE: "4"
      #########################################
      
      # Database configuration (can be overridden via env file)
      DB_SERVER: "192.168.50.100"
      DB_DATABASE: "FXStrat"
      DB_USERNAME: "djaime"
      DB_PASSWORD: "Enrique30072000!3"
      
      # Accept EULA for SQL Server components
      ACCEPT_EULA: Y
      
    volumes:
      # Mount logs directory for persistent logging
      - ./logs:/app/logs
      
      # Mount the application code for development (remove in production)
      - .:/app
      
      # Mount a persistent data directory for any cached data
      - trading_data:/app/data
      
    networks:
      - trading_network
      
    # Restart policy for robustness
    restart: unless-stopped
    
    # Resource limits to prevent container from consuming too much memory
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '4.0'
        reservations:
          memory: 1G
          cpus: '2.0'
    
    # Health check configuration for external app integration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      start_period: 2m   # External data fetching system starts immediately
      retries: 3

networks:
  trading_network:
    driver: bridge
    name: forex_trading_net

volumes:
  # Persistent storage for logs and data
  trading_data:
    driver: local
